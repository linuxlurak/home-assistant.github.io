---
layout: page
title: "automated mosquito repellent vaporizer"
description: "very basic automation; magic lies in the hardware hack"
date: 2015-10-08 19:05
sidebar: true
comments: false
sharing: true
footer: true
ha_category: Automation Examples
---

Hardware required:
 - Sonoff Basic (wlan version) from Itead,
 - hot glue gun,
 - a cross screw driver (for the small Sonoff screws),
 - one pieces of dead simple mosquito repellent vaporizer (eg "Optimum Mückenstopp" (recommended), "Raid Mückenstecker").
 
 Software required:
  - .ino file from https://github.com/KmanOz/Sonoff-HomeAssistant
  or (not tested) from: https://github.com/arendst/Sonoff-Tasmota.
  
 Prepare your Sonoff:
 Open the case and cut a square into the bottom cover like this:
  
  
  PASTED SNIPPETS:
  switch:
 - platform: mqtt
   name: "switch_sleeping_mosquitoheater"
   state_topic: "home/sleeping/mosquitoheater/stat"
   command_topic: "home/sleeping/mosquitoheater"
   qos: 0
   payload_on: "on"
   payload_off: "off"
   retain: true
   
   
#define BUTTON          0                                    // (Don't Change for Original Sonoff, Sonoff SV, Sonoff Touch, Sonoff S20 Socket)
#define RELAY           12                                   // (Don't Change for Original Sonoff, Sonoff SV, Sonoff Touch, Sonoff S20 Socket)
#define LED             13                                   // (Don't Change for Original Sonoff, Sonoff SV, Sonoff Touch, Sonoff S20 Socket)

#define MQTT_CLIENT     "switch_sleeping_mosquitoheater"       // mqtt client_id (Must be unique for each Sonoff)
#define MQTT_SERVER     ""                      // mqtt server
#define MQTT_PORT       1883                                 // mqtt port
#define MQTT_TOPIC      "home/sleeping/mosquitoheater"          // mqtt topic (Must be unique for each Sonoff)
#define MQTT_USER       ""                               // mqtt user
#define MQTT_PASS       ""                               // mqtt password

#define WIFI_SSID       ""                            // wifi ssid
#define WIFI_PASS       ""                           // wifi password
  
Setup your arduino IDE this way:
Board: "Generic ESP8266 Module"
Flash Mode: "DIO"
Flash Frequency: "40MHz"
CPU Frequency: "80MHz"
Flash Size: "1M (64K SPIFFS)"
Debug Port: "Disabled"
Debug Level: "None"
Reset Method: "ck"
Upload Speed: "115200"
Port: --> COM-Port of your FTDI-USB device or for OTA (Over The Air) the correct IP of your Sonoff


You need two automations. One powers on the vaporizer. The other powers it off.

```yaml
automation:
 - alias: "NO-Squito timer (power on @ 22:00)"
   trigger:
    platform: time
    after: '22:00:00'
   action:
    - service: switch.turn_on
      data:
         entity_id: switch.switch_sleeping_mosquitoheater
         
 - alias: "NO-Squito timer (power off @ 04:00)"
   trigger:
    platform: time
    after: '04:00:00'
   action:
    - service: switch.turn_on
      data:
         entity_id: switch.switch_sleeping_mosquitoheater
```

Thats it.
